{"version":3,"sources":["components/Hero.jsx","components/FacilityMap.js","components/MenuItem.jsx","components/FacilityMenu.jsx","components/HoursWarning.jsx","Constants.js","components/CapacityCircle.jsx","components/Card.jsx","components/LibraryOccupancy.jsx","hooks/useInterval.js","components/AllFacilities.jsx","components/FacilityFactory.jsx","components/Footer.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["Hero","className","FacilityMap","all","name","location_id","prefix","UFL001","UFL002","UFL003","UFL004","UFL005","UFL006","UFLGRR","UFLLAT","UFLPCM","UFLRM1","MenuItem","props","facility","h","getIsActive","onClick","changeMenuView","href","FacilityTabs","tab","e","preventDefault","setActiveLocation","class","HoursWarning","OCCUPANCY_LEVELS","OCCUPANCY_LEVEL_RANGES","CapacityCircle","data-pct","Math","round","percentage","width","height","viewport","version","xmlns","r","cx","cy","fill","strokeDasharray","strokeDashoffset","pct","level","C","getLevel","getBarFillClassName","style","PI","getCircleStyle","Card","locationId","id","current","limit","ds","d","Date","parse","toString","minutes","getMinutes","toDateString","getHours","formatDate","current_as_of","LibraryOccupancy","useState","setCurrent","setLimit","setPercentage","updatedTime","setUpdatedTime","getOccupancy","useCallback","a","url","options","headers","mode","fetch","resp","json","data","getPercentage","lim","curr","isNaN","safeOccupancyMinimum","min","safeMin","parseInt","getOccupancyData","occupancy","occupancy_limit","currentSafe","updateComponentData","useEffect","callback","delay","savedCallback","useRef","setInterval","clearInterval","useInterval","getFacility","AllFacilities","FacilityFactory","getFacilityWidget","Footer","App","activeLocation","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7e8c54f7.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default function Hero() {\n  return (\n    <section className=\"hero has-background-link has-text-centered\">\n      <div className=\"hero-body\">\n        <h1 className=\"title has-text-white-bis\">\n          University of Florida Smathers Libraries\n        </h1>\n        <h2 className=\"subtitle has-text-white-bis\">\n          Occupancy Counts by Location\n        </h2>\n      </div>\n    </section>\n  )\n}\n","const FacilityMap = {\n  all: {\n    name: \"All Facilities\",\n    location_id: \"all\",\n    prefix: null\n  },\n  UFL001: {\n    name: \"Smathers Library - Main Entrance\",\n    location_id: \"UFL001\",\n    prefix: \"uf-lib\"\n  },\n  UFL002: {\n    name: \"Library West\",\n    location_id: \"UFL002\",\n    prefix: \"uf-lib\"\n  },\n  UFL003: {\n    name: \"Marston Science Library\",\n    location_id: \"UFL003\",\n    prefix: \"uf-lib\"\n  },\n  UFL004: {\n    name: \"Education Library\",\n    location_id: \"UFL004\",\n    prefix: \"uf-lib\"\n  },\n  UFL005: {\n    name: \"Architecture and Fine Arts Library\",\n    location_id: \"UFL005\",\n    prefix: \"uf-lib\"\n  },\n  UFL006: {\n    name: \"Health Science Center Library\",\n    location_id: \"UFL006\",\n    prefix: \"uf-lib\"\n  },\n  UFLGRR: {\n    name: \"Smathers Library - Reading Room\",\n    location_id: \"UFLGRR\",\n    prefix: \"uf-lib\"\n  },\n  UFLLAT: {\n    name: \"Smathers Library - Latin American and Caribbean Collections\",\n    location_id: \"UFLLAT\",\n    prefix: \"uf-lib\"\n  },\n  UFLPCM: {\n    name: \"Smathers Library - Panama Canal\",\n    location_id: \"UFLPCM\",\n    prefix: \"uf-lib\"\n  },\n  UFLRM1: {\n    name: \"Smathers Library - Room 100\",\n    location_id: \"UFLRM1\",\n    prefix: \"uf-lib\"\n  },\n}\n\nexport default FacilityMap","import React from \"react\"\n\nexport default function MenuItem(props) {\n  const { facility } = props\n\n  const h = `#${facility.location_id}`\n  return (\n    <li className=\"is-size-7 is-uppercase\">\n      <a\n        className={props.getIsActive(facility.location_id)}\n        onClick={props.changeMenuView(facility.location_id)}\n        href={h}\n      >\n        {facility.name}\n      </a>\n    </li>\n  )\n}\n","import React from \"react\"\nimport FacilityMap from \"./FacilityMap\"\nimport MenuItem from \"./MenuItem\"\n\nexport default function FacilityTabs(props) {\n  const changeMenuView = tab => {\n    return e => {\n      e.preventDefault()\n      props.setActiveLocation(tab)\n    }\n  }\n  const getIsActive = tab => {\n    return tab === props.location_id ? \"is-active\" : null\n  }\n  return (\n    <aside className=\"menu\">\n      <p className=\"menu-label\">\n        <span class=\"icon\">\n          <i class=\"fas fa-home\"></i>&nbsp;\n        </span>\n        All\n      </p>\n      <ul className=\"menu-list\">\n        <MenuItem\n          facility={FacilityMap.all}\n          changeMenuView={changeMenuView}\n          getIsActive={getIsActive}\n        />\n      </ul>\n      <p className=\"menu-label\">\n        <span class=\"icon\">\n          <i class=\"fas fa-book\"></i>&nbsp;\n        </span>\n        Smathers Libraries\n      </p>\n      <ul className=\"menu-list\">\n        <MenuItem\n          facility={FacilityMap.UFL002}\n          changeMenuView={changeMenuView}\n          getIsActive={getIsActive}\n        />\n        <MenuItem\n          facility={FacilityMap.UFL003}\n          changeMenuView={changeMenuView}\n          getIsActive={getIsActive}\n        />\n        <MenuItem\n          facility={FacilityMap.UFL006}\n          changeMenuView={changeMenuView}\n          getIsActive={getIsActive}\n        />\n        <MenuItem\n          facility={FacilityMap.UFL005}\n          changeMenuView={changeMenuView}\n          getIsActive={getIsActive}\n        />\n        <MenuItem\n          facility={FacilityMap.UFL004}\n          changeMenuView={changeMenuView}\n          getIsActive={getIsActive}\n        />\n        <MenuItem\n          facility={FacilityMap.UFL001}\n          changeMenuView={changeMenuView}\n          getIsActive={getIsActive}\n        />\n        <MenuItem\n          facility={FacilityMap.UFLRM1}\n          changeMenuView={changeMenuView}\n          getIsActive={getIsActive}\n        />\n        <MenuItem\n          facility={FacilityMap.UFLGRR}\n          changeMenuView={changeMenuView}\n          getIsActive={getIsActive}\n        />\n        <MenuItem\n          facility={FacilityMap.UFLPCM}\n          changeMenuView={changeMenuView}\n          getIsActive={getIsActive}\n        />\n        <MenuItem\n          facility={FacilityMap.UFLLAT}\n          changeMenuView={changeMenuView}\n          getIsActive={getIsActive}\n        />\n      </ul>\n    </aside>\n  )\n}\n","import React from \"react\"\n\nexport default function HoursWarning() {\n  return (\n    <div className=\"notification is-primary\">\n      <h2 className=\"has-text-centered\">\n        <strong>\n          Please confirm{\" \"}\n          <a className=\"is-link\" href=\"http://www.uflib.ufl.edu/ps/hours/\">\n            <span class=\"icon\">\n              <i class=\"fas fa-calendar\"></i>\n            </span>\n            Location Hours\n          </a>{\" \"}\n          before visiting\n        </strong>\n      </h2>\n    </div>\n  )\n}\n","export const BASE_S3_URL = \"https://library-occupancy.s3.amazonaws.com\"\nexport const POLL_SECONDS = 60 * 1000\nexport const OCCUPANCY_LEVELS = {\n  SAFE: \"safe\",\n  WARNING: \"warning\",\n  DANGER: \"danger\",\n}\n\nexport const OCCUPANCY_LEVEL_RANGES = {\n  SAFE_MAXIUMUM: 50,\n  WARNING_MAXIUMUM: 80,\n}\n\nexport const CIRCLE_R = 90\nexport const CIRCLE_CIRC = 565.48","import React from \"react\"\nimport * as C from \"../Constants\"\n\nexport default function CapacityCircle(props) {\n  const getFillPercentage = pct => {\n    const c = Math.PI * (C.CIRCLE_R * 2)\n    const fillPct = ((100 - pct) / 100) * c\n    return fillPct\n  }\n  const getLevel = pct => {\n    let level = C.OCCUPANCY_LEVELS.SAFE\n    if (\n      pct > C.OCCUPANCY_LEVEL_RANGES.SAFE_MAXIUMUM &&\n      pct <= C.OCCUPANCY_LEVEL_RANGES.WARNING_MAXIUMUM\n    ) {\n      level = C.OCCUPANCY_LEVELS.WARNING\n    } else if (pct > C.OCCUPANCY_LEVEL_RANGES.WARNING_MAXIUMUM) {\n      level = C.OCCUPANCY_LEVELS.DANGER\n    }\n    return level\n  }\n  const getBarFillClassName = pct => {\n    const level = getLevel(pct)\n    return `bar-fill ${level}`\n  }\n  const getCircleStyle = () => {\n    return {\n      strokeDashoffset: getFillPercentage(props.percentage),\n    }\n  }\n\n  return (\n    <div\n      className=\"facility-container has-text-centered\"\n      data-pct={Math.round(props.percentage)}\n    >\n      <svg\n        className=\"svg-circle\"\n        width=\"200\"\n        height=\"200\"\n        viewport=\"0 0 100 100\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          r={C.CIRCLE_R}\n          cx=\"100\"\n          cy=\"100\"\n          fill=\"transparent\"\n          strokeDasharray={C.CIRCLE_CIRC}\n          strokeDashoffset=\"0\"\n        ></circle>\n        <circle\n          className={getBarFillClassName(props.percentage)}\n          r={C.CIRCLE_R}\n          cx=\"100\"\n          cy=\"100\"\n          fill=\"transparent\"\n          strokeDasharray={C.CIRCLE_CIRC}\n          strokeDashoffset=\"0\"\n          style={getCircleStyle()}\n        ></circle>\n      </svg>\n    </div>\n  )\n}\n","import React from \"react\"\nimport CapacityCircle from \"./CapacityCircle\"\n\nexport default function Card(props) {\n  const locationId = `${props.facility.location_id}-container`\n  const formatDate = ds => {\n    const d = new Date(Date.parse(ds.toString()))\n    let minutes = d.getMinutes()\n    minutes = minutes < 10 ? `0${minutes}` : `${minutes}`\n    return `${d.toDateString()}, ${d.getHours()}:${minutes}`\n  }\n  return (\n    <div className=\"card has-text-centered\" id={locationId}>\n      <div className=\"card-header has-background-info-light\">\n        <div className=\"card-header-title is-centered facility\">\n          {props.facility.name}\n        </div>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"occupancy-total is-centered\">\n          Occupancy {props.current} of {props.limit}\n        </div>\n        <CapacityCircle {...props} />\n        <div className=\"content is-centered is-small current-as-of\">\n          Updated: {formatDate(props.current_as_of)}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useCallback } from \"react\"\nimport useInterval from \"../hooks/useInterval\"\nimport Card from \"./Card\"\nimport * as C from \"../Constants\"\n\nexport default function LibraryOccupancy(props) {\n  const [current, setCurrent] = useState(0)\n  const [limit, setLimit] = useState(100)\n  const [percentage, setPercentage] = useState(0)\n  const [updatedTime, setUpdatedTime] = useState(new Date())\n  const { facility } = props\n\n  const getOccupancy = useCallback(async () => {\n    const url = `${C.BASE_S3_URL}/${facility.prefix}/${facility.location_id}`\n    const options = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      mode: \"cors\",\n    }\n    const resp = await fetch(url, options)\n    const data = await resp.json()\n    return data\n  }, [facility])\n\n  const getPercentage = (lim, curr) => {\n    let pct = 100 - ((lim - curr) / lim) * 100\n    if (isNaN(pct)) {\n      pct = 100\n    }\n    if (pct < 0) {\n      pct = 0\n    }\n    if (pct > 100) {\n      pct = 100\n    }\n    return pct\n  }\n\n  const safeOccupancyMinimum = min => {\n    const safeMin = parseInt(min.toString(), 10)\n    if (safeMin < 0) {\n      return 0\n    }\n    return safeMin\n  }\n\n  const getOccupancyData = useCallback(async () => {\n    const { occupancy, occupancy_limit, current_as_of } = await getOccupancy()\n    const currentSafe = safeOccupancyMinimum(occupancy)\n    return {\n      current: currentSafe,\n      limit: occupancy_limit,\n      percentage: getPercentage(occupancy_limit, currentSafe),\n      current_as_of,\n    }\n  }, [getOccupancy])\n\n  const updateComponentData = useCallback(async () => {\n    const data = await getOccupancyData()\n    setCurrent(data.current)\n    setLimit(data.limit)\n    setPercentage(data.percentage)\n    setUpdatedTime(data.current_as_of)\n  }, [getOccupancyData])\n\n  useEffect(() => {\n    updateComponentData()\n  }, [updateComponentData])\n\n  useInterval(async () => {\n    await updateComponentData()\n  }, C.POLL_SECONDS)\n\n  return (\n    <Card\n      facility={facility}\n      current={current}\n      limit={limit}\n      percentage={percentage}\n      current_as_of={updatedTime}\n    />\n  )\n}\n","import {\n  useEffect,\n  useRef\n} from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}","import React from \"react\"\nimport LibraryOccupancy from \"./LibraryOccupancy\"\nimport FacilityMap from \"./FacilityMap\"\n\nconst getFacility = location_id => {\n  return FacilityMap[location_id]\n}\n\nexport default function AllFacilities() {\n  return (\n    <>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <LibraryOccupancy facility={getFacility(\"UFL002\")} />\n        </div>\n        <div className=\"column\">\n          <LibraryOccupancy facility={getFacility(\"UFL003\")} />\n        </div>\n        <div className=\"column\">\n          <LibraryOccupancy facility={getFacility(\"UFL006\")} />\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <LibraryOccupancy facility={getFacility(\"UFL005\")} />\n        </div>\n        <div className=\"column\">\n          <LibraryOccupancy facility={getFacility(\"UFL004\")} />\n        </div>\n        <div className=\"column\">\n          <LibraryOccupancy facility={getFacility(\"UFL001\")} />\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <LibraryOccupancy facility={getFacility(\"UFLRM1\")} />\n        </div>\n        <div className=\"column\">\n          <LibraryOccupancy facility={getFacility(\"UFLGRR\")} />\n        </div>\n        <div className=\"column\">\n          <LibraryOccupancy facility={getFacility(\"UFLPCM\")} />\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column\"></div>\n        <div className=\"column\">\n          <LibraryOccupancy facility={getFacility(\"UFLLAT\")} />\n        </div>\n        <div className=\"column\"></div>\n      </div>\n    </>\n  )\n}\n","import React from \"react\"\nimport AllFacilities from \"./AllFacilities\"\nimport FacilityMap from \"./FacilityMap\"\nimport LibraryOccupancy from \"./LibraryOccupancy\"\n\nexport default function FacilityFactory(props) {\n  const getFacilityWidget = () => {\n    if (props.location_id === \"all\") {\n      return <AllFacilities />\n    }\n    const facility = FacilityMap[props.location_id]\n    return <LibraryOccupancy facility={facility} />\n  }\n  return <div className=\"container\">{getFacilityWidget()}</div>\n}\n","import React from \"react\"\n\nexport default function Footer() {\n    return (\n      <footer class=\"footer has-text-centered\">\n        <div class=\"container\">\n          <div class=\"columns\">\n            <div class=\"column\">\n              <a href=\"http://www.uflib.ufl.edu/\">\n                <span class=\"icon\">\n                  <i class=\"fas fa-home\"></i>&nbsp;\n                </span>\n                Library Home\n              </a>\n            </div>\n            <div class=\"column\">\n              <a href=\"http://www.uflib.ufl.edu/ps/hours/\">\n                <span class=\"icon\">\n                  <i class=\"fas fa-calendar\"></i>&nbsp;\n                </span>\n                Library Hours\n              </a>\n            </div>\n          </div>\n        </div>\n      </footer>\n    )\n}","import React, { useState } from \"react\"\nimport Hero from \"./Hero\"\nimport FacilityMenu from \"./FacilityMenu\"\nimport HoursWarning from \"./HoursWarning\"\nimport FacilityFactory from \"./FacilityFactory\"\nimport Footer from \"./Footer\"\n\nexport default function App() {\n  const [activeLocation, setActiveLocation] = useState(\"all\")\n  return (\n    <div id=\"app\">\n      <Hero />\n      <HoursWarning />\n      <section className=\"columns\">\n        <div className=\"column is-2\">\n          <section className=\"section\">\n            <FacilityMenu\n              location_id={activeLocation}\n              setActiveLocation={setActiveLocation}\n            />\n          </section>\n        </div>\n\n        <div className=\"column is-10\">\n          <section className=\"section\">\n            <FacilityFactory location_id={activeLocation} />\n          </section>\n        </div>\n      </section>\n      <Footer />\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}